# Exports
export PATH="$PATH:$HOME/.local/bin:$HOME/.local/bin/lua-language-server/bin:$HOME/.config/scripts"
export EDITOR=hx
export NNN_OPENER=helix-nnn-opener

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/theotime.poulain/google-cloud-sdk/path.zsh.inc' ]; then . '/home/theotime.poulain/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/theotime.poulain/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/theotime.poulain/google-cloud-sdk/completion.zsh.inc'; fi

# -----------------------------------------------

# Source and load
#
# starship prompt
eval "$(starship init zsh)"
#
# direnv
eval "$(direnv hook zsh)"
#
# jump
eval "$(jump shell)"
#
# zoxide
eval "$(zoxide init --cmd cd zsh)"
#
# zsh-syntax-highlighting
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#
#fzf-tab-completion
source $HOME/fzf-tab-completion/zsh/fzf-zsh-completion.sh
#
# broot to br
source /home/theotime.poulain/.config/broot/launcher/bash/br

# -----------------------------------------------

# Aliases
#
# editing .zshrc
alias .zshrc='hx /home/theotime.poulain/.zshrc'
alias sourcezshrc='source ~/.zshrc'
# grep pretty
alias grep='grep -i --color=auto'
# curl better
alias curl='curl -L'
# ls better
alias ls='ls --color=auto'
# nnn to use $EDITOR
alias nnn='nnn -e'
# gitui theme
alias gitui='gitui -t macchiato.ron'
# git
alias gfp='git fetch && git pull'
# cat and bat
alias cat='bat'
# harlequin
alias harlequin='harlequin -l us -p'
## dbt aliases:
alias deferdbtrun='dbt run --defer --state $DBT_MANIFEST_PATH'
alias deferdbttest='dbt test --defer --state=$DBT_MANIFEST_PATH'
#
## python aliases
alias sourcevenv='source .venv/bin/activate'
#
## kitty aliases
alias icat='kitten icat'

## planet vpn aliases
alias stop_vpn="sudo ip link set planet down"
alias start_vpn="sudo ip link set planet up"
alias restart_vpn="stop_vpn && start_vpn"
# Functions
# get the list of commits for a given branch and number of days
function gitlog {
    local days="$1"
    local branch="$2"
    
git log --since="$days days ago" --pretty=format:"%h - %ai - %an: %s" --name-only --perl-regexp --author='^((?!michelangelo-ci).*)$' "$branch" | bat
}

# dbt dev workflow utilities
## function to lint sql files that diff vs origin/HEAD
lintdiffs() {
  # Detect the name of the main branch (master or main or other)
  MAIN_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')

  # Run the sqlfluff fix command with the correct branch
  sqlfluff lint $(git diff --name-only --diff-filter=d origin/$MAIN_BRANCH)
}

# function to fix sql files that diff vs origin/HEAD
fixdiffs() {
  # Detect the name of the main branch (master or main or other)
  MAIN_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')

  # Run the sqlfluff fix command with the correct branch
  sqlfluff fix $(git diff --name-only --diff-filter=d origin/$MAIN_BRANCH)
}

# function to update yml files of updated tables that diff vs origin/HEAD
ymlupdate() {
  # Detect the name of the main branch (master or main or other)
  MAIN_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')

  # Run the sqlfluff fix command with the correct branch
  dbt run -s $(git diff --name-only --diff-filter=d origin/$MAIN_BRANCH)
  dbt-osmosis yaml document $(git diff --name-only --diff-filter=d origin/$MAIN_BRANCH)
}


# Themes
#
# fzf theme (catppuccin macchiato)
export FZF_DEFAULT_OPTS=" \
--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"
#
# nnn theme
BLK="03" CHR="03" DIR="04" EXE="02" REG="07" HARDLINK="05" SYMLINK="05" MISSING="08" ORPHAN="01" FIFO="06" SOCK="03" UNKNOWN="01"
export NNN_COLORS="#04020301;4231"
export NNN_FCOLORS="$BLK$CHR$DIR$EXE$REG$HARDLINK$SYMLINK$MISSING$ORPHAN$FIFO$SOCK$UNKNOWN"

# dbt completion
fpath=($HOME/.config/scripts/completion $fpath)

# completion
autoload -Uz compinit

for dump in ~/.zcompdump(N.mh+24); do
    compinit
done

compinit -C

zstyle ':completion:*' menu yes select

if [[ "${terminfo[kcbt]}" != "" ]]; then
  bindkey "${terminfo[kcbt]}" reverse-menu-complete   # [Shift-Tab] - move through the completion menu backwards
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# keybinds
# fzf-tab-completion
bindkey '^I' fzf_completion

